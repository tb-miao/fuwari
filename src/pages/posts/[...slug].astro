---
import path from "node:path";
import License from "@components/misc/License.astro";
import Markdown from "@components/misc/Markdown.astro";

import MainGridLayout from "@layouts/MainGridLayout.astro";
import { getSortedPosts } from "@utils/content-utils";
import { getDir, getPostUrlBySlug } from "@utils/url-utils";
import { Icon } from "astro-icon/components";
import { gitHubEditConfig, licenseConfig } from "src/config";
import PostMetadata from "../../components/PostMeta.astro";
import ImageWrapper from "../../components/misc/ImageWrapper.astro";
import { profileConfig, siteConfig } from "../../config";
import { formatDateToYYYYMMDD } from "../../utils/date-utils";
import dayjs from 'dayjs';
import utc from 'dayjs/plugin/utc';

export async function getStaticPaths() {
	const blogEntries = await getSortedPosts();
	return blogEntries.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

const { remarkPluginFrontmatter } = await entry.render();
dayjs.extend(utc);
const lastModified = dayjs(entry.data.updated)
  .utc()
  .format('YYYY-MM-DDTHH:mm:ss')

const jsonLd = {
	"@context": "https://schema.org",
	"@type": "BlogPosting",
	headline: entry.data.title,
	description: entry.data.description || entry.data.title,
	keywords: entry.data.tags,
	author: {
		"@type": "Person",
		name: profileConfig.name,
		url: Astro.site,
	},
	datePublished: formatDateToYYYYMMDD(entry.data.published),
	inLanguage: entry.data.lang
		? entry.data.lang.replace("_", "-")
		: siteConfig.lang.replace("_", "-"),
	// TODO include cover image here
};
---
<MainGridLayout banner={entry.data.image} title={entry.data.title} description={entry.data.description} lang={entry.data.lang} setOGTypeArticle={true} series={entry.data.series} headings={headings}>
    <script is:inline slot="head" type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative mb-4">
        <div id="post-container" class:list={["card-base z-10 px-6 md:px-9 pt-6 pb-4 relative w-full ",
            {}
        ]}>
            <!-- word count and reading time -->
            <div class="flex flex-row text-black/30 dark:text-white/30 gap-5 mb-3 transition onload-animation">
                <div class="flex flex-row items-center">
                    <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
                        <Icon name="material-symbols:notes-rounded"></Icon>
                    </div>
                    <div class="text-sm">{remarkPluginFrontmatter.words} 字</div>
                </div>
                <div class="flex flex-row items-center">
                    <div class="transition h-6 w-6 rounded-md bg-black/5 dark:bg-white/10 text-black/50 dark:text-white/50 flex items-center justify-center mr-2">
                        <Icon name="material-symbols:schedule-outline-rounded"></Icon>
                    </div>
                    <div class="text-sm">{remarkPluginFrontmatter.minutes} 分钟</div>
                </div>
            </div>

            <!-- title -->
            <div class="relative onload-animation">                <div
                    data-pagefind-body data-pagefind-weight="10" data-pagefind-meta="title"
                    class="transition w-full flex items-center font-bold mb-3
                    text-3xl md:text-[2.25rem]/[2.75rem]
                    text-black/90 dark:text-white/90
                    md:before:w-1 before:h-5 before:rounded-md before:bg-[var(--primary)]
                    before:absolute before:top-[0.75rem] before:left-[-1.125rem]
                ">
                    {entry.data.pinned && (
                        <span class="inline-flex items-center mr-3 px-2.5 py-1 text-sm font-medium bg-[oklch(95%_0.2_var(--hue))] dark:bg-[oklch(25%_0.2_var(--hue))] text-[oklch(55%_0.2_var(--hue))] dark:text-[oklch(85%_0.2_var(--hue))] rounded">
                            <Icon name="material-symbols:push-pin" class="mr-1.5 text-base" /> 置顶
                        </span>
                    )}
                    <span>{entry.data.title}</span>
                </div>
            </div>

            <!-- description/excerpt -->
            {(entry.data.description || remarkPluginFrontmatter.excerpt) && (
                <div class="onload-animation mb-4">
                    <div class="text-black/75 dark:text-white/75 text-sm leading-relaxed">
                        {entry.data.description || remarkPluginFrontmatter.excerpt}
                    </div>
                </div>
            )}

            <!-- metadata -->
            <div class="onload-animation">
                <PostMetadata
                        class="mb-5"
                        published={entry.data.published}
                        updated={entry.data.updated}
                        tags={entry.data.tags}
                        slug={entry.slug}
                ></PostMetadata>
                {!entry.data.image && <div class="border-[var(--line-divider)] border-dashed border-b-[1px] mb-5"></div>}
            </div>

            <!-- always show cover as long as it has one -->

            {entry.data.image &&
                <ImageWrapper id="post-cover" src={entry.data.image} basePath={path.join("content/posts/", getDir(entry.id))} class="mb-8 rounded-xl banner-container onload-animation"/>
            }


            <Markdown class="mb-6 markdown-content onload-animation">
                <Content />
            </Markdown>

            <!-- 文章反馈与编辑区域 -->
            <div class="mb-4 p-4 rounded-lg bg-[var(--license-block-bg)] border border-[var(--line-divider)] onload-animation">
                {gitHubEditConfig.enable && (
                    <>
                        <!-- 分隔线 
                        <div class="border-t border-[var(--line-divider)] my-3"></div>-->
                        
                        <!-- GitHub编辑区域 -->
                        <div class="flex items-start gap-3">
                            <div class="h-5 w-5 rounded bg-[var(--primary)] flex items-center justify-center">
                                <Icon name="material-symbols:edit-outline" class="text-[0.875rem] text-white dark:text-black/70"></Icon>
                            </div>
                            <div class="flex-1">
                                <p class="text-black/80 dark:text-white/80 text-sm mb-1">发现错误或想要改进这篇文章？</p>
                                <a 
                                    href={`${gitHubEditConfig.baseUrl}/${entry.slug}.md`}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    class="inline-flex items-center gap-1 text-[var(--primary)] hover:text-[oklch(0.65_0.16_var(--hue))] text-sm font-medium transition-colors"
                                >
                                    <Icon name="fa6-brands:github" class="text-[0.875rem]"></Icon>
                                    在 GitHub 上编辑此页
                                    <Icon name="material-symbols:open-in-new" class="text-[0.75rem]"></Icon>
                                </a>
                            </div>
                        </div>
                    </>
                )}
            </div>

            {licenseConfig.enable && <License title={entry.data.title} slug={entry.slug} pubDate={entry.data.published} class="mb-6 rounded-xl license-container onload-animation"></License>}
            

            
            <!-- Giscus 评论区 -->
            <!-- <script src="https://giscus.app/client.js"
                    data-repo="afoim/giscus-fuwari"
                    data-repo-id="R_kgDOOi8quw"
                    data-category="Announcements"
                    data-category-id="DIC_kwDOOi8qu84CprDV"
                    data-mapping="pathname"
                    data-strict="0"
                    data-reactions-enabled="1"
                    data-emit-metadata="0"
                    data-input-position="top"
                    data-theme="noborder_gray"
                    data-lang="zh-CN"
                    data-loading="lazy"
                    crossorigin="anonymous"
                    async>
            </script> -->
    <!-- 添加隐藏元素存储日期 -->
    <div id="last-modified" data-last-modified={lastModified} style="display: none;"></div>

    <div>
        <script is:inline>
            function runtime() {
                // 从隐藏元素获取日期
                const lastModifiedElement = document.getElementById('last-modified');
                const startDate = new Date(lastModifiedElement.dataset.lastModified);
                const currentDate = new Date();
                const diff = currentDate - startDate;

                const seconds = Math.floor(diff / 1000);
                const days = Math.floor(seconds / 86400);
                const hours = Math.floor((seconds % 86400) / 3600);
                const minutes = Math.floor((seconds % 3600) / 60);
                const secs = seconds % 60;

                const years = Math.floor(days / 365);
                const months = Math.floor((days % 365) / 30);
                const remainingDays = days % 30;

                let runtimeString = '距离上次编辑: ';
                if (years > 0) {
                    runtimeString += `${years}年`;
                }
                if (months > 0) {
                    runtimeString += `${months}月`;
                }
                if (remainingDays > 0) {
                    runtimeString += `${remainingDays}天`;
                }
                if (hours > -1) {
                    runtimeString += `${hours}小时`;
                }
                if (minutes > -1 && minutes < 10) {
                    runtimeString += `0${minutes}分`;
                }
                if (minutes > 9) {
                    runtimeString += `${minutes}分`;
                }
                if (secs > -1 && secs < 10) {
                    runtimeString += `0${secs}秒`;
                }
                if (secs > 9) {
                    runtimeString += `${secs}秒`;
                }

                document.getElementById("modifiedtime").innerHTML = runtimeString;
            }
            setInterval(runtime, 1000);
        </script>
        <div class="relative transition overflow-hidden bg-[var(--license-block-bg)] py-5 px-6 mb-6 rounded-xl license-container onload-animation">
            <script is:inline></script>
            <div class="flex items-center gap-2">

                <div class="transition h-9 w-9 rounded-lg overflow-hidden
            relative
           flex items-center justify-center mr-0">
  <Icon
                  name="material-symbols:history-rounded"
                  class="text-4xl text-[var(--primary)] transition-transform group-hover:translate-x-0.5 bg-[var(--enter-btn-bg)] p-2 rounded-md"
                />
    </div>

                <!-- 文字容器保持不变 -->
                <div class="flex flex-col gap-0.1">
                    <div id="modifiedtime" class="text-[1.0rem] leading-tight text-black/75 dark:text-white/75"></div>
                    <p class="text-[0.8rem] leading-tight text-black/75 dark:text-white/75">部分信息可能已经过时</p>
                </div>
            </div>
        </div>
        <!--  <p>{lastModified}</p>   -->
    </div>
    <br>
    <div class="flex flex-col md:flex-row justify-between mb-4 gap-4 overflow-hidden w-full">
        <a href={entry.data.nextSlug ? getPostUrlBySlug(entry.data.nextSlug) : "#"}
           class:list={["w-full font-bold overflow-hidden active:scale-95", {"pointer-events-none": !entry.data.nextSlug}]}>
            {entry.data.nextSlug && <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center !justify-start gap-4" >
                <Icon name="material-symbols:chevron-left-rounded" class="text-[2rem] text-[var(--primary)]" />
                <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
                    {entry.data.nextTitle}
                </div>
            </div>}
        </a>

        <a href={entry.data.prevSlug ? getPostUrlBySlug(entry.data.prevSlug) : "#"}
           class:list={["w-full font-bold overflow-hidden active:scale-95", {"pointer-events-none": !entry.data.prevSlug}]}>
            {entry.data.prevSlug && <div class="btn-card rounded-2xl w-full h-[3.75rem] max-w-full px-4 flex items-center !justify-end gap-4">
                <div class="overflow-hidden transition overflow-ellipsis whitespace-nowrap max-w-[calc(100%_-_3rem)] text-black/75 dark:text-white/75">
                    {entry.data.prevTitle}
                </div>
                <Icon name="material-symbols:chevron-right-rounded" class="text-[2rem] text-[var(--primary)]" />
            </div>}
        </a>
    </div>
    <br>
    <div class="border-t border-[var(--line-divider)] my-3"></div>
            <div class="flex flex-col md:flex-row justify-between mb-4 gap-4 overflow-hidden w-full">
                <!-- twikoo评论区 -->
                <div id="tcomment"></div>
		            <script is:inline defer src="https://cdn.jsdelivr.net/npm/twikoo@1.6.44/dist/twikoo.min.js"onload="initTwikoo()"></script>
		            <script is:inline> 
		            function initTwikoo() {
  		            twikoo.init({
    		            envId: 'https://tw.tbmiao.dpdns.org/', // 环境id，https://xxx.vercel.app，
    		            //为了在大陆有很好的访问速度，我绑定了自定义二级域名。
    		            //is:inline 是为了在astro中正确加载。
    		            el: '#tcomment', 
		            });
		            }
		            </script>
            </div>
</MainGridLayout>
